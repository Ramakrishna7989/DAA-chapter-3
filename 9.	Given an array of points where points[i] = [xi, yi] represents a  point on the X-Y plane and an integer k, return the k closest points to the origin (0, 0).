#include <stdio.h>
#include <stdlib.h>
#include <math.h>

struct Point {
    int x, y;
};

int compare(const void* a, const void* b) {
    return ((*(struct Point*)a).x * (*(struct Point*)a).x + (*(struct Point*)a).y * (*(struct Point*)a).y) - 
           ((*(struct Point*)b).x * (*(struct Point*)b).x + (*(struct Point*)b).y * (*(struct Point*)b).y);
}

int** kClosest(int** points, int pointsSize, int* pointsColSize, int k, int* returnSize, int** returnColumnSizes) {
    struct Point* arr = (struct Point*)malloc(pointsSize * sizeof(struct Point));
    for (int i = 0; i < pointsSize; i++) {
        arr[i].x = points[i][0];
        arr[i].y = points[i][1];
    }
    
    qsort(arr, pointsSize, sizeof(struct Point), compare);
    
    int** result = (int**)malloc(k * sizeof(int*));
    *returnColumnSizes = (int*)malloc(k * sizeof(int));
    *returnSize = k;
    
    for (int i = 0; i < k; i++) {
        (*returnColumnSizes)[i] = 2;
        result[i] = (int*)malloc(2 * sizeof(int));
        result[i][0] = arr[i].x;
        result[i][1] = arr[i].y;
    }
    
    free(arr);
    return result;
}
